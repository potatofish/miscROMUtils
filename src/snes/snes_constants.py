import src.common.constants as cons

COPIER_HEADER_SIZE = 512

# Extended Header Field Specifications
# (including indicator byte from the Normal Header )
LABEL_DEV_ID = "Dev ID"
LABEL_EX_HEADER_FLAG = LABEL_DEV_ID

LABEL_EX_HEADER_MAKER_CODE = "Maker Code"
LABEL_EX_HEADER_GAME_CODE = "Game Code"
EX_HEADER_ASCII_FIELDS = [
    (LABEL_EX_HEADER_MAKER_CODE, 2), 
    (LABEL_EX_HEADER_GAME_CODE, 4)
]
LABEL_PREFIX_EX_HEADER_RESERVED = "Fixed Byte"
LABELS_EX_HEADER_RESERVED = [f"{LABEL_PREFIX_EX_HEADER_RESERVED}[{i}]" for i in range(6)]
VALUE_EX_HEADER_RESERVED = 0x00
VALUE_EX_HEADER_FLAG = 0x33
EX_HEADER_FIELDS = EX_HEADER_ASCII_FIELDS.copy()
EX_HEADER_FIELDS.extend([(i, 1) for i in LABELS_EX_HEADER_RESERVED])

LABEL_CUSTOM_COPROCESSOR = "Cart SubType"
VALUE_SPC7110 = 0x00
VALUE_ST010_ST011 = 0x01
VALUE_ST018 = 0x02
VALUE_CX4 = 0x03

LABEL_SPC7110 = "SPC7110"
LABEL_ST010_ST011 = "ST010/ST011"
LABEL_ST018 = "ST018"
LABEL_CX4 = "CX4"

CUSTOM_COPROCESSOR_DICTIONARY = {
    VALUE_SPC7110: LABEL_SPC7110,
    VALUE_ST010_ST011: LABEL_ST010_ST011,
    VALUE_ST018: LABEL_ST018,
    VALUE_CX4: LABEL_CX4
}
CUSTOM_COPROCESSOR_DICTIONARY = dict(CUSTOM_COPROCESSOR_DICTIONARY)

EX_HEADER_FIELDS.extend([
    ("ExFlash Size", 1), 
    ("ExRAM Size", 1), 
    ("Special Version", 1), 
    (LABEL_CUSTOM_COPROCESSOR, 1)
])

# Normal Header Field Specifications
LABEL_GAME_TITLE   = "Game title"

# ➡ LABEL_MAPSPEED related fields
LABEL_MAPSPEED     = "Map/Speed"
LABEL_MAP_MODE = "Map Mode"
MAPSPEED_BITS_FIXED_0 = [7,6,3]
MAPSPEED_BITS_FIXED_1 = [5]
MAPSPEED_BIT_SPEED = 4
MAPSPEED_BIT_EX = 2
MAPSPEED_BIT_SPECIAL = 1
MAPSPEED_BIT_HI_LO = 0

SPEED_MODE_SLOW, SPEED_MODE_FAST = 0, 1
SPEED_MODE_LABELS = [
    [SPEED_MODE_SLOW, "Slow"],
    [SPEED_MODE_FAST, "Fast"]
]
SPEED_MODE_LABELS = dict(SPEED_MODE_LABELS)

LABEL_ROM_LO = "LoROM"
LABEL_ROM_HI = "HiROM"
LABEL_ROM_EXHI = "ExHiROM"
LABEL_ROM_SA_1 = "SA-1 ROM"
LABEL_ROM_SDD_1 = "SDD-1 ROM"
LABEL_ROM_UNKN = "Unknown ROM"
HI_LO_MODE_LOROM, HI_LO_MODE_HIROM = 0, 1
HI_LO_MODE_LABELS = [
    [HI_LO_MODE_LOROM, LABEL_ROM_LO],
    [HI_LO_MODE_HIROM, LABEL_ROM_HI]
]
HI_LO_MODE_LABELS = dict(HI_LO_MODE_LABELS)

HEADER_OFFSETS = [
    [LABEL_ROM_LO, 0x_7F_B0],
    [LABEL_ROM_HI, 0x_FF_B0],
    [LABEL_ROM_EXHI, 0x_40_FF_B0]
]
HEADER_OFFSETS = dict(HEADER_OFFSETS)

# ➡ LABEL_CHIPSET related fields
LABEL_CHIPSET      = "Chipset"
LABEL_CHIP_ROM     = 'ROM'
LABEL_CHIP_RAM     = 'RAM'
LABEL_CHIP_BATTERY = 'BATTERY'
LABEL_CHIP_DSP     = "DSP"       # DSP-1, 2, 3 or 4
LABEL_CHIP_GSU     = "GSU"       # SuperFX
LABEL_CHIP_OBC1    = "OBC1"
LABEL_CHIP_SA1     = "SA-1"
LABEL_CHIP_SDD1    = "S-DD1"
LABEL_CHIP_SRTC    = "S-RTC"
LABEL_CHIP_OTHER   = "OTHER"   # Super Game Boy/Satellaview

LABEL_CHIP_COPROCESSOR = "coprocessor"  # Placeholder for value from COPROCESSOR_DICTIONARY
LABEL_CHIP_CUSTOM      = "custom"       # Placeholder for value from CUSTOM_COPROCESSOR_DICTIONARY

VALUE_CHIPSET_ROM_ONLY = 0x0
VALUE_CHIPSET_ROM_RAM = 0x1
VALUE_CHIPSET_ROM_RAM_BATTERY = 0x2
VALUE_CHIPSET_ROM_COPROCESSOR = 0x3
VALUE_CHIPSET_ROM_COPROCESSOR_RAM = 0x4
VALUE_CHIPSET_ROM_COPROCESSOR_RAM_BATTERY = 0x5
VALUE_CHIPSET_ROM_COPROCESSOR_BATTERY = 0x6

VALUE_COPROCESSOR_DSP = 0x0
VALUE_COPROCESSOR_GSU = 0x1
VALUE_COPROCESSOR_OBC1 = 0x2
VALUE_COPROCESSOR_SA1 = 0x3
VALUE_COPROCESSOR_SDD1 = 0x4
VALUE_COPROCESSOR_SRTC = 0x5
VALUE_COPROCESSOR_OTHER = 0xE
VALUE_COPROCESSOR_CUSTOM = 0xF

CHIPSETS_WITH_COPROCESSOR = [
    VALUE_CHIPSET_ROM_COPROCESSOR,
    VALUE_CHIPSET_ROM_COPROCESSOR_RAM,
    VALUE_CHIPSET_ROM_COPROCESSOR_RAM_BATTERY,
    VALUE_CHIPSET_ROM_COPROCESSOR_BATTERY
]

COPROCESSOR_DICTIONARY = [
    [VALUE_COPROCESSOR_DSP, LABEL_CHIP_DSP],
    [VALUE_COPROCESSOR_GSU, LABEL_CHIP_GSU],
    [VALUE_COPROCESSOR_OBC1, LABEL_CHIP_OBC1],
    [VALUE_COPROCESSOR_SA1, LABEL_CHIP_SA1],
    [VALUE_COPROCESSOR_SDD1, LABEL_CHIP_SDD1],
    [VALUE_COPROCESSOR_SRTC, LABEL_CHIP_SRTC],
    [VALUE_COPROCESSOR_OTHER, LABEL_CHIP_OTHER],
    [VALUE_COPROCESSOR_CUSTOM, LABEL_CHIP_CUSTOM]
]
COPROCESSOR_DICTIONARY = dict(COPROCESSOR_DICTIONARY)

CHIPSET_DICTIONARY = [
    [VALUE_CHIPSET_ROM_ONLY,                     [LABEL_CHIP_ROM]],
    [VALUE_CHIPSET_ROM_RAM,                      [LABEL_CHIP_ROM, LABEL_CHIP_RAM]],
    [VALUE_CHIPSET_ROM_RAM_BATTERY,              [LABEL_CHIP_ROM, LABEL_CHIP_RAM, LABEL_CHIP_BATTERY]],
    [VALUE_CHIPSET_ROM_COPROCESSOR,              [LABEL_CHIP_ROM, LABEL_CHIP_COPROCESSOR]],
    [VALUE_CHIPSET_ROM_COPROCESSOR_RAM,          [LABEL_CHIP_ROM, LABEL_CHIP_COPROCESSOR, LABEL_CHIP_RAM]],
    [VALUE_CHIPSET_ROM_COPROCESSOR_RAM_BATTERY,  [LABEL_CHIP_ROM, LABEL_CHIP_COPROCESSOR, LABEL_CHIP_RAM, LABEL_CHIP_BATTERY]],
    [VALUE_CHIPSET_ROM_COPROCESSOR_BATTERY,      [LABEL_CHIP_ROM, LABEL_CHIP_COPROCESSOR, LABEL_CHIP_BATTERY]]
]
CHIPSET_DICTIONARY = dict(CHIPSET_DICTIONARY)

# ➡ LABEL_COUNTRY_CODE related fields
LABEL_COUNTRY_CODE = "Country"
LABEL_COUNTRY_UNKNOWN = "Unknown Country"
COUNTRY_CODE_DICTIONARY = {
    0x00 : 'Japan',  #0x00
    0x01 : 'USA',    #0x01
    0x02 : 'Europe'  #0x02
}

LABEL_ROM_SIZE = "ROM Size"
LABEL_RAM_SIZE = "RAM Size"
LABEL_ROM_VERSION = "ROM Vers."

LABEL_CHECKSUM = cons.LABEL_CHECKSUM
LABEL_COMPLEMENT = cons.LABEL_COMPLEMENT

# order based on https://sneslab.net/wiki/SNES_ROM_Header#ROM_Registration_Data
# WARNING - https://snes.nesdev.org/wiki/ROM_header has wrong order
# todo figure out why switching the label order of checksum and complement break this
NORMAL_HEADER_FIELDS = [
    (LABEL_GAME_TITLE, 21), 
    (LABEL_MAPSPEED, 1), 
    (LABEL_CHIPSET, 1), 
    (LABEL_ROM_SIZE, 1), 
    (LABEL_RAM_SIZE, 1), 
    (LABEL_COUNTRY_CODE, 1), 
    (LABEL_DEV_ID, 1), 
    (LABEL_ROM_VERSION, 1),
    (LABEL_COMPLEMENT, 2),
    (LABEL_CHECKSUM, 2)
]
HEADER_FIELDS = EX_HEADER_FIELDS.copy()
HEADER_FIELDS.extend(NORMAL_HEADER_FIELDS)
# nl = '\n'
# for x in HEADER_FIELDS:
#     print(f"{x}")
# print(f"{HEADER_FIELDS=}")